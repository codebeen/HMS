<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="RoundedCornerElipse.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CheckPicture.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>